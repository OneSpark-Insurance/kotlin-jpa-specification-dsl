
plugins {
    id 'nebula.project' version '7.0.5'
    id 'nebula.release' version '14.0.2'
    id 'nebula.kotlin' version '1.3.72'
    id 'nebula.maven-publish' version '14.1.1'
    id 'com.jfrog.bintray' version '1.8.4'
}

group 'au.com.console'

repositories {
    jcenter()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    api 'org.jetbrains.kotlin:kotlin-reflect'
    api 'org.springframework.data:spring-data-jpa:2.3.0.RELEASE'
    compileOnly 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    testApi 'org.springframework.boot:spring-boot-starter-data-jpa:2.3.0.RELEASE'
    testApi 'com.h2database:h2:1.4.191'
    testApi 'org.springframework.boot:spring-boot-starter-test:2.3.0.RELEASE'
    testApi 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
}

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
        setExceptionFormat("full")
    }
}

tasks.bintrayUpload.dependsOn tasks.check

gradle.taskGraph.whenReady { graph ->
    tasks.bintrayUpload.onlyIf {
        graph.hasTask(':final') || graph.hasTask(':candidate')
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['nebula']
    // allow republshing in case bintray fails to upload properly
    override = true
    pkg {
        repo = 'kotlin'
        userOrg = 'consoleau'
        name = 'kotlin-jpa-specification-dsl'
        licenses = ['Apache-2.0']
        labels = ['kotlin','spring']
        websiteUrl = "https://github.com/consoleau/${project.name}"
        issueTrackerUrl = "https://github.com/consoleau/${project.name}/issues"
        vcsUrl = "https://github.com/consoleau/${project.name}.git"
    }
}